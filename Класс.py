'''
Реализуйте класс Matrix. Он должен содержать:

Конструктор от списка списков. Гарантируется, что списки состоят из чисел, не пусты и все имеют одинаковый размер.
Конструктор должен копировать содержимое списка списков, т. е. при изменении списков, от которых была сконструирована
матрица, содержимое матрицы изменяться не должно.

Метод __str__, переводящий матрицу в строку. При этом элементы внутри одной строки должны быть
разделены знаками табуляции, а строки  —  переносами строк. После каждой строки не должно быть символа
табуляции и в конце не должно быть переноса строки.

Метод size без аргументов, возвращающий кортеж вида (число строк, число столбцов).
Пример теста с участием этого метода есть в следующей задаче этой недели.

Тест 1
Входные данные:
# Task 1 check 1
m = Matrix([[1, 0], [0, 1]])
print(m)
m = Matrix([[2, 0, 0], [0, 1, 10000]])
print(m)
m = Matrix([[-10, 20, 50, 2443], [-5235, 12, 4324, 4234]])
print(m)

Вывод программы:
1	0
0	1
2	0	0
0	1	10000
-10	20	50	2443
-5235	12	4324	4234

Тест 2
Входные данные:
# Task 1 check 2
m1 = Matrix([[1, 0, 0], [1, 1, 1], [0, 0, 0]])
m2 = Matrix([[1, 0, 0], [1, 1, 1], [0, 0, 0]])
print(str(m1) == str(m2))

Вывод программы:
True

Тест 3
Входные данные:
# Task 1 check 3
m = Matrix([[1, 1, 1], [0, 100, 10]])
print(str(m) == '1\t1\t1\n0\t100\t10')

Вывод программы:
True
'''

from sys import stdin
import copy


class Matrix:
    def __init__(self, old_list):
        self.save_list = copy.deepcopy(old_list)

    def __str__(self):
        new_str = str()
        for i, one_list in enumerate(self.save_list, start=1):
            for k, num in enumerate(one_list, start=1):
                if k < len(one_list):
                    new_str += str(num) + "\t"
                else:  # k == len
                    new_str += str(num)
            if i < len(self.save_list):
                new_str += "\n"
        return new_str

    def size(self):
        return len(self.save_list), len(self.save_list[0])


exec(stdin.read())
